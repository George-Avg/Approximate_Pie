from mpmath import mpf, mp

mp.dps = 70
pi = mpf('3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787661119590921642019893809525720106548586327886593615338182796823030195203530185296899577362259941389124972177528347913151557485724245415069595082953311')
print(pi)
def n_root(n):
    prev_dif = float('inf')
    x = int(10**(n/2.011465867588061)) - 1
    while True:
        x += 1
        root = x**(1/n)
        dif = abs(pi - root)

        if prev_dif < dif:
            break
        prev_dif = dif
    return prev_dif, x-1


best_match = float('inf')
for n in range(2,50):
    dif, x = n_root(n)
    print('\nn:',n)
    print('x:',x)
    print('dif:', dif)

    if best_match > dif:
        best_match = dif
        best_x = x
        best_n = n
    print('best match:', best_match)
    print('best_n:', best_n)

print('\n\nFinal result:')
print(best_match)
print(best_x**(1/best_n))
print(best_n)
print(best_x)